


# ################################################################################
# # Using HDF5 to store a Model
# # +++++++++++++++++++++++++++

# with h5py.File('Model1D.h5','w') as hf:
#     mod.toHdf(hf, 'model1d')

# ###############################################################################
# # Read from the file
# ModNew = hdfRead.readKeyFromFiles(fNames='Model1D.h5', groupName='/', key='model1d')


# ################################################################################
# plt.figure()
# ModNew.pcolor(grid=True);

# ################################################################################
# # Using HDF5 to create memory for multiple models
# # +++++++++++++++++++++++++++++++++++++++++++++++

# # Create an initial Model class with enough layers to hold as many layers as we expect. (an upper bound)
# # We do this since the structure of a Model1D can change, so we set enough memory to handle the largest model.
# tmp = Model1D(nCells=mod.maxLayers)

# # Open the file
# with h5py.File('Model1D.h5', 'w') as f: 

#     # Create memory in the HDF5 file, but extend memory to accommodate 4 models.
#     tmp.createHdf(f, myName='model1d', nRepeats=4)

#     ################################################################################
#     # Now we can imagine a parallel region, where 4 models are instantiated
#     # and perturbed independently.
#     # After each has been perturbed, we can store it to its location in the HDF5 file.

#     for i in range(4):
#         mod = mod0.deepcopy() # Each starts from an initial state

#         for j in range(1000):
#             remapped, perturbed = mod.perturb()

#             # And update the model posteriors
#             perturbed.updatePosteriors()

#             mod = perturbed

#         # Write the perturbed model to a specific index in the file.
#         mod.writeHdf(f, 'model1d', index=i)


# # ################################################################################
# # # Reading from a HDF5 file with multiple models

# # # Special read functions
# # from geobipy import hdfRead
# # # Open the file
# # f = h5py.File('Model1D.h5', 'r')
# # # Read the Model1D from the file
# # tmp = hdfRead.readKeyFromFile(f, fName='Model1D.h5', groupName='/', key='test', index=1)
# # f.close()