
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/Meshes/plot_rectilinear_mesh_3d.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_Meshes_plot_rectilinear_mesh_3d.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_Meshes_plot_rectilinear_mesh_3d.py:


3D Rectilinear Mesh
-------------------
This 3D rectilinear mesh defines a grid with straight cell boundaries.

.. GENERATED FROM PYTHON SOURCE LINES 9-15

.. code-block:: default

    from geobipy import StatArray
    from geobipy import RectilinearMesh3D
    import matplotlib.pyplot as plt
    import numpy as np









.. GENERATED FROM PYTHON SOURCE LINES 16-17

Specify some cell centres in x and y

.. GENERATED FROM PYTHON SOURCE LINES 17-54

.. code-block:: default

    x = StatArray(np.arange(10.0), 'Easting', 'm')
    y = StatArray(np.arange(11.0), 'Northing', 'm')
    z = StatArray(np.arange(12.0), 'Depth', 'm')

    rm = RectilinearMesh3D(xEdges=x, yEdges=y, zEdges=z)

    rm2 = rm[:, :, 5]
    rm3 = rm[:, 5, :]
    rm4 = rm[5, :, :]

    plt.figure()
    plt.subplot(131)
    rm2.plotGrid()
    plt.subplot(132)
    rm3.plotGrid()
    plt.subplot(133)
    rm4.plotGrid()


    # ################################################################################
    import h5py
    with h5py.File('rm3d.h5', 'w') as f:
        rm.toHdf(f, 'test')

    with h5py.File('rm3d.h5', 'r') as f:
        rm2 = RectilinearMesh3D.fromHdf(f['test'])

    rm.pyvista_mesh().save('rm3d_a.vtk')
    rm2.pyvista_mesh().save('rm3d_b.vtk')

    xx, yy = np.meshgrid(rm.x.centres, rm.y.centres)
    height = StatArray(np.sin(np.sqrt(xx ** 2.0 + yy ** 2.0)), "Height")
    rm = RectilinearMesh3D(xEdges=x, yEdges=y, zEdges=z, height=height)

    plt.figure()
    rm.height.pcolor()




.. rst-class:: sphx-glr-horizontal


    *

      .. image:: /examples/Meshes/images/sphx_glr_plot_rectilinear_mesh_3d_001.png
          :alt: plot rectilinear mesh 3d
          :class: sphx-glr-multi-img

    *

      .. image:: /examples/Meshes/images/sphx_glr_plot_rectilinear_mesh_3d_002.png
          :alt: plot rectilinear mesh 3d
          :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    (<AxesSubplot:xlabel='Easting (m)', ylabel='Northing (m)'>, <matplotlib.collections.QuadMesh object at 0x15d2ec2b0>, <matplotlib.colorbar.Colorbar object at 0x15cfc8d00>)



.. GENERATED FROM PYTHON SOURCE LINES 55-56

We can plot the mesh in 3D!

.. GENERATED FROM PYTHON SOURCE LINES 56-58

.. code-block:: default

    pv = rm.pyvista_plotter()








.. GENERATED FROM PYTHON SOURCE LINES 59-60

We can plot the mesh in 3D!

.. GENERATED FROM PYTHON SOURCE LINES 60-76

.. code-block:: default

    mesh = rm.pyvista_mesh()
    mesh.save('rm3d.vtk')

    with h5py.File('rm3d.h5', 'w') as f:
        rm.toHdf(f, 'test')

    with h5py.File('rm3d.h5', 'r') as f:
        rm2 = RectilinearMesh3D.fromHdf(f['test'])

    rm.pyvista_mesh().save('rm3d_c.vtk')
    rm2.pyvista_mesh().save('rm3d_d.vtk')

    plt.show()











.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  1.361 seconds)


.. _sphx_glr_download_examples_Meshes_plot_rectilinear_mesh_3d.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_rectilinear_mesh_3d.py <plot_rectilinear_mesh_3d.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_rectilinear_mesh_3d.ipynb <plot_rectilinear_mesh_3d.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
