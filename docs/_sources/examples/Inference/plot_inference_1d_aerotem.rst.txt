
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/Inference/plot_inference_1d_aerotem.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_Inference_plot_inference_1d_aerotem.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_Inference_plot_inference_1d_aerotem.py:


1D Inference of Aerotem Data
----------------------------

All plotting in GeoBIPy can be carried out using the 3D inference class

.. GENERATED FROM PYTHON SOURCE LINES 9-15

.. code-block:: default

    import matplotlib.pyplot as plt
    from geobipy import serial_geobipy
    from geobipy import example_path
    from geobipy import Inference3D
    import numpy as np








.. GENERATED FROM PYTHON SOURCE LINES 16-20

Running GeoBIPy to invert data
++++++++++++++++++++++++++++++

Define some directories and paths

.. GENERATED FROM PYTHON SOURCE LINES 22-23

The directory where HDF files will be stored

.. GENERATED FROM PYTHON SOURCE LINES 23-24

.. code-block:: default

    output_directory = "..//supplementary//time_domain_inversion//results"







.. GENERATED FROM PYTHON SOURCE LINES 27-28

The parameter file defines the set of user parameters needed to run geobipy.

.. GENERATED FROM PYTHON SOURCE LINES 28-29

.. code-block:: default

    parameter_file = "aerotem_options"







.. GENERATED FROM PYTHON SOURCE LINES 30-35

.. code-block:: default


    # Here are the contents of the user parameter file.
    with open(parameter_file, 'r') as f:
        print(f.read())





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    from os.path import join
    # General information about specifying parameters.
    # The following list of parameters can be given either a single value or a list of values
    # of length equal to the number of systems in the data. If one value is specified and there
    # are multiple systems, that value is used for all of them.
    # initialRelativeError
    # minimumRelativeError
    # maximumRelativeError
    # initialAdditiveError
    # minimumAdditiveError
    # maximumAdditiveError
    # relativeErrorProposalVariance
    # additiveErrorProposalVariance

    # -------------------------------------------------------
    # General file structure information.
    # -------------------------------------------------------
    # Data folder
    data_directory = "..//supplementary//data"
    # The data_filename and system_filename options are single strings for single system dataset,
    # or a list of str for multi-system datasets like Skytem.
    # Data File Name.
    data_filename = data_directory + "//aerotem_single.txt"
    # System File Name.
    system_filename = data_directory + "//aerotem.stm"

    # Define the data type to invert
    data_type = TdemData

    # Maximum number of Markov Chains per data point.
    n_markov_chains = 10000

    # -------------------------------------------------------
    # General GeoBIPy options.
    # -------------------------------------------------------
    # Interactively plot a single data point as it progresses
    interactive_plot = False
    # How often to update the plot. (lower is generally slower)
    update_plot_every = 1000
    # Save a PNG of the final results for each data point.
    save_png = False
    # Save the results of the McMC inversion to HDF5 files. (Generally always True)
    save_hdf5 = True

    # -------------------------------------------------------
    # Turning on or off different solvable parameters.
    # -------------------------------------------------------
    # Parameter Priors
    # solveParameter will prevent parameters from exploding to very large or very small numbers.
    # solveGradient prevents large changes in parameters value from occurring.
    # If both of these are active, the recovered earth models generally contain
    # less layers due to an implicit constraint.
    # If you feel that your recovered models are too conservative, try turning one of these off.
    # It is highly recommended to have at least one of these options turned on!
    # Use a prior on the parameter magnitude.
    solve_parameter = False
    # Use the Prior on the difference in log parameter diff(log(X))
    solve_gradient = True

    # Use the prior on the relative data errors
    solve_relative_error = True
    # Use the prior on the additive data errors
    solve_additive_error = True
    # Use the prior on the data height
    solve_height = True
    # Use the prior on the calibration parameters for the data
    solve_calibration = False

    # -------------------------------------------------------
    # Prior Details
    # -------------------------------------------------------
    # Earth model prior details
    # -------------------------
    # Maximum number of layers in the 1D model
    maximum_number_of_layers = 30
    # Minimum layer depth in metres
    minimum_depth = 1.0
    # Maximum layer depth in metres
    maximum_depth = 350.0
    # Minimum layer thickness.
    # If minimumThickness: None, it will be autocalculated.
    minimum_thickness = None

    # Data prior details
    # ------------------
    # The data priors are imposed on three different aspects of the data.
    # The relative and additive error and the elevation of the data point.
    # Data uncertainty priors are used if solveRelativeError or solveAdditiveError are True.
    # If the data file contains columns of the estimated standard deviations, they are used as the initial values
    # when starting an McMC inversion. If the file does not contain these estimates, then the initial
    # standard deviations are calculated using sqrt((relative * data)^2 + (additive)^2).

    # If there are multiple systems (e.g. Skytem, usually low and high moment, and hence 2 systems)
    # the relative and additive values below should have enough values to match the number of systems.
    # e.g. for Skytem, the initial_relative_error might = [0.03, 0.03],

    # Assign an initial percentage relative Error
    # If the file contains no standard deviations, this will be used
    # to assign the initial data uncertainties.
    initial_relative_error = 0.05
    ## Relative Error Prior Details
    # Minimum Relative Error
    minimum_relative_error = 0.05
    # Maximum Relative Error
    maximum_relative_error = 0.5

    # Assign an initial additive error level.
    # If the file contains no standard deviations, this will be used
    # to assign the initial data uncertainties.
    initial_additive_error = 1.0e-8
    # Additive Error Prior Details
    # Minimum Additive Error
    minimum_additive_error = 1.0e-10
    # Maximum Relative Error
    maximum_additive_error = 10.0**-5.8

    # Elevation range allowed (m), either side of measured height
    maximum_height_change = 1.0

    # -------------------------------------------------------
    # Proposal details
    # -------------------------------------------------------

    # Data proposal details
    # ---------------------
    # The relative, additive, and elevation proposal variances are assigned to
    # normal distributions with a mean equal to its value in the current model (of the Markov chain)
    # These variances are used when we randomly choose a new value for that given variable.
    # Proposal variance for the relative error
    relative_error_proposal_variance = 2.5e-7
    # Proposal variance for the additive error
    additive_error_proposal_variance = 0.0025  #[0.0025, 0.0025]
    # Proposal variance of the elevation
    height_proposal_variance = 0.01

    # Earth model proposal details
    # ----------------------------
    # Evolution Probabilities for earth model manipulation during the Markov chain.
    # These four values are internally scaled such that their sum is 1.0.
    # Probability that a layer is inserted into the model.
    probability_of_birth = 1.0/6.0
    # Probablitiy that a layer is removed from the model.
    probability_of_death = 1.0/6.0
    # Probability that an interface in the model is perturbed.
    probability_of_perturb = 1.0/6.0
    # Probability of no change occuring to the layers of the model.
    probability_of_no_change = 0.5

    # -------------------------------------------------------
    # Typically Defaulted parameters
    # -------------------------------------------------------
    # Standard Deviation of log(rho): log(1 + factor)
    # Default is 10.0
    factor = None
    # Standard Deviation for the difference in layer resistivity
    # Default is 1.5
    gradient_standard_deviation = None
    # Initial scaling factor for proposal covariance
    covariance_scaling = None
    # Scaling factor for data misfit
    multiplier = None
    # Clipping Ratio for interface contrasts
    clip_ratio = None
    # Only sample the prior
    ignore_likelihood = False

    # Impose bounds on the parameter value
    # None, or a length 2 list i.e. [a, b]
    parameter_limits = None

    # Display the resistivity?
    reciprocate_parameters = True

    verbose = False




.. GENERATED FROM PYTHON SOURCE LINES 36-41

To run geobipy in serial, simply call that function.
Here we specify index 0 to only carry out a shortened inversion of a single
data point for time considerations.
You will notice however that the HDF files are created for multiple lines
inside the data file.

.. GENERATED FROM PYTHON SOURCE LINES 41-44

.. code-block:: default

    serial_geobipy(parameter_file, output_directory, index=0)






.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Running GeoBIPy in serial mode
    Using user input file aerotem_options
    Output files will be produced at ..//supplementary//time_domain_inversion//results
    Creating HDF5 files, this may take a few minutes...
    Files are being created for data files ['..//supplementary//data//aerotem_single.txt'] and system files ['..//supplementary//data//aerotem.stm']
    Created hdf5 file for line 1010 with 1 data points
    i=0, k=2, 0.000 s/Model, 0.004 s Elapsed

    i=1000, k=3, 0.005 s/Model, 4.943 s Elapsed

    i=2000, k=6, 0.005 s/Model, 9.865 s Elapsed

    i=3000, k=4, 0.005 s/Model, 14.875 s Elapsed

    i=4000, k=4, 0.005 s/Model, 19.882 s Elapsed

    i=5000, k=4, 0.005 s/Model, 24.930 s Elapsed

    i=6000, k=6, 0.005 s/Model, 30.054 s Elapsed

    i=7000, k=4, 0.005 s/Model, 35.137 s Elapsed

    i=8000, k=4, 0.005 s/Model, 40.414 s Elapsed

    i=9000, k=6, 0.005 s/Model, 45.748 s Elapsed

    i=10000, k=7, 0.005 s/Model, 51.135 s Elapsed

    Remaining Points 0/1 || Elapsed Time: 0:00:51.378396 h:m:s || ETA 0:00:51.378396 h:m:s




.. GENERATED FROM PYTHON SOURCE LINES 45-51

Plotting the results for a single data point
++++++++++++++++++++++++++++++++++++++++++++

For the sake of plotting, we refer to a previously completed inversion.
For space considerations we do not include those HDF files in this repository
and simply use them for plotting.

.. GENERATED FROM PYTHON SOURCE LINES 53-55

.. code-block:: default

    results_3d = Inference3D(directory=output_directory, system_file_path="..//supplementary//data")








.. GENERATED FROM PYTHON SOURCE LINES 56-57

We can grab the results for a single index or fiducial

.. GENERATED FROM PYTHON SOURCE LINES 57-59

.. code-block:: default

    results_1d = results_3d.inference_1d(index=0)








.. GENERATED FROM PYTHON SOURCE LINES 60-63

.. code-block:: default

    results_1d.plot()

    plt.show()



.. image:: /examples/Inference/images/sphx_glr_plot_inference_1d_aerotem_001.png
    :alt: , Time Domain EM Data
    :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  55.359 seconds)


.. _sphx_glr_download_examples_Inference_plot_inference_1d_aerotem.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_inference_1d_aerotem.py <plot_inference_1d_aerotem.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_inference_1d_aerotem.ipynb <plot_inference_1d_aerotem.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
