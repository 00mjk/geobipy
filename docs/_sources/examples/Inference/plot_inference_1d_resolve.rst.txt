
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/Inference/plot_inference_1d_resolve.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_Inference_plot_inference_1d_resolve.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_Inference_plot_inference_1d_resolve.py:


1D Posterior analysis of the Bayesian inference
-----------------------------------------------

All plotting in GeoBIPy can be carried out using the 3D inference class

.. GENERATED FROM PYTHON SOURCE LINES 9-17

.. code-block:: default

    import matplotlib.pyplot as plt
    from geobipy import serial_geobipy
    from geobipy import example_path
    from geobipy import Inference3D
    import numpy as np
    import os
    import shutil








.. GENERATED FROM PYTHON SOURCE LINES 18-22

Running GeoBIPy to invert data
++++++++++++++++++++++++++++++

Define some directories and paths

.. GENERATED FROM PYTHON SOURCE LINES 24-25

The directory where HDF files will be stored

.. GENERATED FROM PYTHON SOURCE LINES 25-26

.. code-block:: default

    output_directory = "..//supplementary//frequency_domain_inversion//results"







.. GENERATED FROM PYTHON SOURCE LINES 27-36

.. code-block:: default


    for filename in os.listdir(output_directory):
        file_path = os.path.join(output_directory, filename)
        try:
            if os.path.isfile(file_path) or os.path.islink(file_path):
                os.unlink(file_path)
        except Exception as e:
            print('Failed to delete %s. Reason: %s' % (file_path, e))








.. GENERATED FROM PYTHON SOURCE LINES 37-38

The parameter file defines the set of user parameters needed to run geobipy.

.. GENERATED FROM PYTHON SOURCE LINES 38-39

.. code-block:: default

    parameter_file = "user_parameters_resolve.py"







.. GENERATED FROM PYTHON SOURCE LINES 40-45

.. code-block:: default


    # Here are the contents of the user parameter file.
    with open(parameter_file, 'r') as f:
        print(f.read())





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    from geobipy.src.inversion._userParameters import _userParameters

    # General information about specifying parameters.
    # The following list of parameters can be given either a single value or a list of values
    # of length equal to the number of systems in the data. If one value is specified and there
    # are multiple systems, that value is used for all of them.
    # self.initialRelativeError
    # self.minimumRelativeError
    # self.maximumRelativeError
    # self.initialAdditiveError
    # self.minimumAdditiveError
    # self.maximumAdditiveError
    # self.relativeErrorProposalVariance
    # self.additiveErrorProposalVariance

    # -------------------------------------------------------
    # General file structure information.
    # -------------------------------------------------------
    # Specify the folder to the data
    dataDirectory = "..//supplementary//data"
    # Data File Name. If there are multiple, encompass them with [ ].
    dataFilename = dataDirectory + "//Resolve_single.txt"
    # System File Name. If there are multiple, encompass them with [ ].
    systemFilename = dataDirectory + "//FdemSystem2.stm"

    # Define the data type to invert

    from geobipy import FdemData
    data_type = FdemData

    class userParameters(_userParameters):
      """ User Interface Parameters for GeoBIPy """
      def __init__(self, DataPoint):
        """ File for the user to specify inpust to GeoBIPy. """

        ## Maximum number of Markov Chains per data point.
        self.nMarkovChains = 2000

        # -------------------------------------------------------
        # General GeoBIPy options.
        # -------------------------------------------------------
        # Interactively plot a single data point as it progresses
        self.plot = False
        # How often to update the plot. (lower is generally slower)
        self.plotEvery = 1000
        # Save a PNG of the final results for each data point.
        self.savePNG = False
        # Save the results of the McMC inversion to HDF5 files. (Generally always True)
        self.save = True

        # -------------------------------------------------------
        # Turning on or off different solvable parameters.
        # -------------------------------------------------------
        # Parameter Priors
        # solveParameter will prevent parameters from exploding very large or very small numbers.
        # solveGradient prevents large changes in parameters value from occurring.
        # If both of these are active, the recovered earth models generally contain
        # less layers due to an implicit constraint.
        # If you feel that your recovered models are too conservative, try turning one of these off.
        # It is highly recommended to have at least one of these options turned on!
        # Use a prior on the parameter magnitude.
        self.solveParameter = False
        # Use the Prior on the difference in log parameter diff(log(X))
        self.solveGradient = True

        # Use the prior on the relative data errors
        self.solveRelativeError = True
        # Use the prior on the additive data errors
        self.solveAdditiveError = True
        # Use the prior on the data height
        self.solveHeight = True
        # Use the prior on the calibration parameters for the data
        self.solveCalibration = False

        # -------------------------------------------------------
        # Prior Details
        # -------------------------------------------------------

        # Earth model prior details
        # -------------------------
        # Maximum number of layers in the 1D model
        self.maximumNumberofLayers = 30
        # Minimum layer depth in metres
        self.minimumDepth = 1.0
        # Maximum layer depth in metres
        self.maximumDepth = 150.0
        # Minimum layer thickness.
        # If minimumThickness = None, it will be autocalculated.
        self.minimumThickness = None

        # Impose bounds on the parameter value
        # None, or a length 2 list i.e. [a, b]
        self.parameterLimits = None

        # Data prior details
        # ------------------
        # The data priors are imposed on three different aspects of the data.
        # The relative and additive error and the elevation of the data point.
        # Data uncertainty priors are used if solveRelativeError or solveAdditiveError are True.
        # If the data file contains columns of the estimated standard deviations, they are used as the initial values
        # when starting an McMC inversion. If the file does not contain these estimates, then the initial
        # values are used below as sqrt((relative * data)^2 + (additive)^2).

        # Assign an initial percentage relative Error
        # If the file contains no standard deviations, this will be used
        # to assign the initial data uncertainties.
        self.initialRelativeError = 0.05
        ## Relative Error Prior Details
        # Minimum Relative Error
        self.minimumRelativeError = 0.001
        # Maximum Relative Error
        self.maximumRelativeError = 0.5

        # Assign an initial additivr error level.
        # If the file contains no standard deviations, this will be used
        # to assign the initial data uncertainties.
        self.initialAdditiveError = 5.0
        # Additive Error Prior Details
        # Minimum Additive Error
        self.minimumAdditiveError = 3.0
        # Maximum Relative Error
        self.maximumAdditiveError = 20.0

        # Elevation range allowed (m), either side of measured height
        self.maximumElevationChange = 1.0

        # -------------------------------------------------------
        # Proposal details
        # -------------------------------------------------------

        # Data proposal details
        # ---------------------
        # The relative, additive, and elevation proposal variances are assigned to
        # normal distributions with a mean equal to its value in the current model (of the Markov chain)
        # These variances are used when we randomly choose a new value for that given variable.
        # Proposal variance for the relative error
        self.relativeErrorProposalVariance = 2.5e-7
        # Proposal variance for the additive error
        self.additiveErrorProposalVariance = 1.0e-4
        # Proposal variance of the elevation
        self.elevationProposalVariance = 0.01

        # Earth model proposal details
        # ----------------------------
        # Evolution Probabilities for earth model manipulation during the Markov chain.
        # These four values are internally scaled such that their sum is 1.0.
        # Probability that a layer is inserted into the model.
        self.pBirth = 1.0/6.0
        # Probablitiy that a layer is removed from the model.
        self.pDeath = 1.0/6.0
        # Probability that an interface in the model is perturbed.
        self.pPerturb = 1.0/6.0
        # Probability of no change occuring to the layers of the model.
        self.pNochange = 0.5

        # -------------------------------------------------------
        # Typically Defaulted parameters
        # -------------------------------------------------------
        # Standard Deviation of log(rho) = log(1 + factor)
        # Default is 10.0
        self.factor = None
        # Standard Deviation for the difference in layer resistivity
        # Default is 1.5
        self.gradientStd = None
        # Initial scaling factor for proposal covariance
        self.covScaling = None
        # Scaling factor for data misfit
        self.multiplier = None
        # Clipping Ratio for interface contrasts
        self.clipRatio = None
        # Only sample the prior
        self.ignoreLikelihood = False

        # Display the resistivity?
        self.reciprocateParameters = True

        # Don't change these.
        self.dataDirectory = dataDirectory
        self.dataFilename = dataFilename
        self.systemFilename = systemFilename

        self.verbose = False

        _userParameters.__init__(self, DataPoint)





.. GENERATED FROM PYTHON SOURCE LINES 46-51

To run geobipy in serial, simply call that function.
Here we specify index 0 to only carry out a shortened inversion of a single
data point for time considerations.
You will notice however that the HDF files are created for multiple lines
inside the data file.

.. GENERATED FROM PYTHON SOURCE LINES 51-54

.. code-block:: default

    serial_geobipy(parameter_file, output_directory, index=0)






.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Running GeoBIPy in serial mode
    Using user input file user_parameters_resolve.py
    Output files will be produced at ..//supplementary//frequency_domain_inversion//results
    Creating HDF5 files, this may take a few minutes...
    Files are being created for data files ['..//supplementary//data//Resolve_single.txt'] and system files ['..//supplementary//data//FdemSystem2.stm']
    Created hdf5 file for line 30010 with 1 data points
    i=0, k=2, 0.000 s/Model, 0.005 s Elapsed

    i=1000, k=4, 0.004 s/Model, 4.432 s Elapsed

    Remaining Points 2/1 || Elapsed Time: 0:00:08.937778 h:m:s || ETA 0:00:08.937778 h:m:s




.. GENERATED FROM PYTHON SOURCE LINES 55-61

Plotting the results for a single data point
++++++++++++++++++++++++++++++++++++++++++++

For the sake of plotting, we refer to a previously completed inversion.
For space considerations we do not include those HDF files in this repository
and simply use them for plotting.

.. GENERATED FROM PYTHON SOURCE LINES 63-65

.. code-block:: default

    results_3d = Inference3D(directory=output_directory, system_file_path=example_path+"//supplementary//data")








.. GENERATED FROM PYTHON SOURCE LINES 66-67

We can grab the results for a single index or fiducial

.. GENERATED FROM PYTHON SOURCE LINES 67-69

.. code-block:: default

    results_1d = results_3d.inference_1d(index=0)








.. GENERATED FROM PYTHON SOURCE LINES 70-73

.. code-block:: default

    results_1d.plot()

    plt.show()



.. image:: /examples/Inference/images/sphx_glr_plot_inference_1d_resolve_001.png
    :alt: , Frequency Domain EM Data
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    /Users/nfoks/codes/repositories/geobipy/geobipy/src/base/plotting.py:355: RuntimeWarning: invalid value encountered in true_divide
      cnts = counts / np.trapz(counts, x = centres)
    /Users/nfoks/codes/repositories/geobipy/geobipy/src/classes/mesh/RectilinearMesh2D.py:356: RuntimeWarning: invalid value encountered in true_divide
      tmp = np.divide(cs, np.expand_dims(total, 1-axis))
    /Users/nfoks/codes/repositories/geobipy/geobipy/src/classes/mesh/RectilinearMesh2D.py:356: RuntimeWarning: invalid value encountered in true_divide
      tmp = np.divide(cs, np.expand_dims(total, 1-axis))
    /Users/nfoks/codes/repositories/geobipy/geobipy/src/base/plotting.py:355: RuntimeWarning: invalid value encountered in true_divide
      cnts = counts / np.trapz(counts, x = centres)
    /Users/nfoks/codes/repositories/geobipy/geobipy/src/base/plotting.py:355: RuntimeWarning: invalid value encountered in true_divide
      cnts = counts / np.trapz(counts, x = centres)





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  16.336 seconds)


.. _sphx_glr_download_examples_Inference_plot_inference_1d_resolve.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_inference_1d_resolve.py <plot_inference_1d_resolve.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_inference_1d_resolve.ipynb <plot_inference_1d_resolve.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
